plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	//log4j loggin 모듈 의존성 제거
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	//end 모듈 의존성 제거
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.h2database:h2'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	//https://github.com/gavlyukovskiy/spring-boot-data-source-decorator에서
	//2022-05-08_yeoooo: 쿼리를 좀 더 편하게 보여주는 외부라이브러리를 사용할 수 있다.
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//2022-06-03_yeoooo: javax.validation..constarints는 spring-starter-web에서 제외되었기 때문에
	//따로 gradle에 추가해주어야 함

	//start log4j implementation
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	//end of log4j

	//start spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//end of spring security

<<<<<<< Updated upstream
	//Oauth2.0
	compileOnly('org.springframework.boot:spring-boot-starter-oauth2-client')
	//JWT
//	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
//	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
=======
	//OAuth2.0
	compileOnly('org.springframework.boot:spring-boot-starter-oauth2-client')

>>>>>>> Stashed changes

}



tasks.named('test') {
	useJUnitPlatform()
}
